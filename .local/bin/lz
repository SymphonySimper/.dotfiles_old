#!/bin/sh

red=$(syl r); bold=$(syl B); reset=$(syl R)

h="$HOME"

shell=.config/shell

bin=.local/bin
binRofi="$bin"/rofi
binAliases="$bin"/aliases

paths="$bin"/.paths
shellPaths="$paths"/shell
binPaths="$paths"/scripts

v="$EDITOR"

shebang="#!/bin/sh"

errorMsg(){ echo "${bold}${red}${1}${reset}"; }

executable(){ letmein "$h/$1"; }
addPath(){ echo "$1\t\t\t$2/$1" >> "$h/$3"; }
sortPaths(){ cat "$h/$1" | sort -o "$h/$1"; }

createBinFile(){
	if [ -f "$h/$1/$2" ]; then
		errorMsg "$2 already exists at $h/$1"
	else
		echo "$shebang" > "$h/$1/$2"
		addPath "$2" "$1" "$binPaths"
		sortPaths "$binPaths"
		executable "$1/$2"
		$v "$h/$1/$2"
	fi
}

createShellFile(){
	if [ -f "$h/$shell/$1" ]; then
		errorMsg "$1 already exists at $h/$shell"
	else
		$v "$h/$shell/$1" &&
		[ -f "$h/$shell/$1" ] && { 
			addPath "$1" "$shell" "$shellPaths"
			sortPaths "$shellPaths"
		}
	fi
}

deleteFile(){
	yeet(){ 
		rm "$h/$(grep -w "$2" "$h/$1" | awk '{ print $2 }')"
		sed "/^$2/d" -i "$h/$1"
	} 
	ifPresent(){ grep -wq "^$1" "$h/$2"; }
	msg="has been removed from"
	if ( ifPresent "$1" "$binPaths" ); then
		yeet "$binPaths" "$1"	
	     errorMsg "$1 $msg $h/$bin"
	elif ( ifPresent "$1" "$shellPaths" ); then
		yeet "$shellPaths" "$1"	
		errorMsg "$1 $msg $h/$shell"
	else
		errorMsg "$1 not found"
	fi
}

case "$1" in
	-a) shift; createBinFile "$binAliases" "$1" ;;
	-r) shift; createBinFile "$binRofi" "$1" ;;
	-sh) shift; createShellFile "$1" ;;
	-d) shift; deleteFile "$1" ;;
	*) createBinFile "$bin" "$1" ;;
esac
