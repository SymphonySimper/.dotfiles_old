#!/bin/sh

loc="$HOME"/lifeisfun
tempfile_loc=/tmp/codingTime

if [ -n "$1" ]; then
	echo "$1" >> $tempfile_loc
fi

tempfile_length="$(cat $tempfile_loc 2>/dev/null | wc -l)"

if [ $tempfile_length -eq 1 ]; then
	head_line="$(head -n 1 $tempfile_loc)"
elif [ $tempfile_length -eq 2 ]; then
	head_line="$(head -n 1 $tempfile_loc)"
	tail_line="$(tail -n 1 $tempfile_loc)"
fi

open_doc(){
	view_doc(){ { bspc desktop -f '^4' && $READER "$1"; }> /dev/null 2>&1 & }
	case "$head_line" in
		rust) view_doc "$loc"/rust/rust-lang.pdf ;;
	esac
}
open_terminals(){
	bspc desktop -f '^3'
	for i in $(seq 2); do $TERMINAL -cd "$final_query_loc" > /dev/null 2>&1; done
	bspc node -f west
	bspc node -z right +400 0
	open_doc
	rm $tempfile_loc
}

get_loc(){ ls -aF $1 | grep '/' | sed '/\.\./d; s/\///g'; }
if [ -z "$@" ]; then
	printf "\0prompt\037dir\n"
	get_loc "$loc"
elif [ -n "$(exa -aD "$loc/$head_line" 2>/dev/null)" ] && [ $tempfile_length -eq 1 ]; then
	printf "\0prompt\037$head_line\n"
	get_loc "$loc/$head_line"
elif [ -z "$(exa -aD "$loc/$head_line" 2>/dev/null)" ] && [ $tempfile_length -eq 1 ]; then
	final_query_loc="$loc/$head_line"
	open_terminals > /dev/null 2>&1
fi

if [ $(cat $tempfile_loc 2>/dev/null | wc -l) -eq 2 ]; then
	final_query_loc="$loc/$head_line/$tail_line"
	open_terminals > /dev/null 2>&1
fi
